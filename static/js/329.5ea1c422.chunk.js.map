{"version":3,"file":"static/js/329.5ea1c422.chunk.js","mappings":"oMACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,2B,mBCIrGA,EAAe,SAACC,GAClB,OAAO,gBAAKC,UAAWC,EAAAA,OAAhB,UACH,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,QAEnD,EACGC,EAAW,SAACN,GACZ,OAAO,gBAAKC,UAAWC,EAAAA,QAAhB,SAA4BF,EAAMO,SAC5C,EA+BD,EA7BgB,SAACP,GAEb,IAAMQ,EAAkBR,EAAMS,QAAQC,KAAK,SAAAC,GAAM,OAAI,SAACZ,EAAD,CAA8BK,GAAIO,EAAOP,GAAIC,KAAMM,EAAON,MAAvCM,EAAOP,GAA9B,IAC3CQ,EAAmBZ,EAAMa,SAASH,KAAK,SAAAH,GAAO,OAAI,SAACD,EAAD,CAA2BC,QAASA,EAAQA,SAA7BA,EAAQH,GAA3B,IAEhDU,EAAiBC,EAAAA,YAUrB,OAAO,iBAAKd,UAAWC,EAAAA,QAAhB,WACH,gBAAKD,UAAWC,EAAAA,aAAhB,SACKM,KAEL,iBAAKP,UAAWC,EAAAA,SAAhB,UACKU,GACD,4BACI,qBAAUI,IAAKF,EAAgBG,SAff,WACxB,IAAIC,EAAOJ,EAAeK,QAAQC,MAClCpB,EAAMqB,qBAAqBH,EAC9B,EAYyEE,MAAOpB,EAAMc,kBAC3E,mBAAQQ,QAZA,WAChBtB,EAAMuB,aACT,EAUW,0BAIf,E,8BCrCKC,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OADC,EAIXE,EAAmB,SAACC,GAM7B,OAAOC,EAAAA,EAAAA,IAAQN,EAAiB,CAAC,EAA1BM,EALiB,SAAC9B,GACrB,OAAIA,EAAM0B,QACH,SAACG,GAAD,UAAe7B,KADG,SAAC,KAAD,CAAUG,GAAI,UAE1C,GAGJ,ECRKqB,EAAkB,SAACC,GAAD,MAAY,CAChChB,QAASgB,EAAMM,YAAYtB,QAC3BI,SAAUY,EAAMM,YAAYlB,SAC5BC,eAAgBW,EAAMM,YAAYjB,eAHd,EAMlBkB,EAAqB,SAACC,GAAD,MAAe,CACtCV,YAAa,WACTU,GAASC,EAAAA,EAAAA,MACZ,EACDb,qBAAsB,SAACH,GACnBe,GAASE,EAAAA,EAAAA,IAA4BjB,GACxC,EANsB,GAQ3BkB,EAAAA,EAAAA,KACIN,EAAAA,EAAAA,IAAQN,EAAiBQ,GACzBJ,EAFJQ,CAGEC,GAEF,OAAeD,EAAAA,EAAAA,KACXN,EAAAA,EAAAA,IAAQN,EAAiBQ,GACzBJ,EAFJ,CAGES,E","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.js","hoc/withAuthNavigate.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__GCX8L\",\"dialogsItems\":\"Dialogs_dialogsItems__aHR5O\",\"messages\":\"Dialogs_messages__u1Uo-\"};","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {sendMessageCreator, updateNewMessageTextCreator} from \"../../Redux/dialogsReducer\";\r\n\r\nconst DialogsItems = (props) => {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\nlet Messages = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const dialogsElements = props.dialogs.map( dialog => <DialogsItems key={dialog.id} id={dialog.id} name={dialog.name}/> )\r\n    const messagesElements = props.messages.map( message => <Messages key={message.id} message={message.message}/>)\r\n\r\n    let newMessageText = React.createRef()\r\n\r\n    const onMessageTextChange = () => {\r\n        let text = newMessageText.current.value\r\n        props.updateNewMessageText(text)\r\n    }\r\n    const sendMessage = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n            <div>\r\n                <textarea ref={newMessageText} onChange={onMessageTextChange} value={props.newMessageText} ></textarea>\r\n                <button onClick={sendMessage}>send</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\n    let NavigateComponent = (props) => {\r\n        if(!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(NavigateComponent)\r\n}","import React from 'react'\r\nimport {sendMessageCreator, updateNewMessageTextCreator} from \"../../Redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendMessage: () => {\r\n        dispatch(sendMessageCreator())\r\n    },\r\n    updateNewMessageText: (text) => {\r\n        dispatch(updateNewMessageTextCreator(text))\r\n    }\r\n})\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(Dialogs)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(Dialogs)\r\n"],"names":["DialogsItems","props","className","s","to","id","name","Messages","message","dialogsElements","dialogs","map","dialog","messagesElements","messages","newMessageText","React","ref","onChange","text","current","value","updateNewMessageText","onClick","sendMessage","mapStateToProps","state","isAuth","auth","withAuthNavigate","Component","connect","dialogsPage","mapDispatchToProps","dispatch","sendMessageCreator","updateNewMessageTextCreator","compose","Dialogs"],"sourceRoot":""}